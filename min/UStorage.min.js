!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";function n(t,e){return{code:t,target:e,message:arguments.length>2&&void 0!==arguments[2]?arguments[2]:"success"}}function o(t,e){return y(t)?e&&t.expires?t:t.value?t.value:t:t}function a(t,e){var r=d(e[t]);if(y(r)&&r.hasOwnProperty("expires")){var n=new Date(r.expires);if(new Date>n)return!0}return!1}function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t){return null!=t}function f(t){return null==t}function c(t){return"string"==typeof t}function s(t){return"number"==typeof t}function l(t){return"boolean"==typeof t}r.r(e);var y=function(t){return"[object Object]"===Object.prototype.toString.call(t)};function d(t){var e;try{e=JSON.parse(t)}catch(r){e=t}return e}function p(t){if(f(t))return"";if(c(t)||s(t)||l(t))return t;var e;try{e=JSON.stringify(t)}catch(r){console.log("typeof target ".concat(i(t)," can not stringify to JSON")),e=t}return e}function m(t){if(s(t))return function(t){if(!s(t))throw new TypeError("first argument of function afterSomeDay must be a number");if(t<0)throw new RangeError('first argument of function "afterSomeDay" must be greater than 0');var e=Date.now();return new Date(e+864e5*t)}(t);if(c(t)){var e=function(t){if(!c(t))throw new TypeError('argument of function "getDayFromString" expect a string but got '.concat(h(t)));var e=new Date(t);v(e)&&console.warn("got a InvalidDate");return e}(t);if(function(t){return new Date>t}(e))throw new RangeError("expires date must after now");return e}return new Date}function h(t){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function v(t){return"Invalid Date"===t.toString()}function g(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var b=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.data=window.localStorage,this.prefix=e||"",this.init()}var e,r,i;return e=t,(r=[{key:"add",value:function(t,e,r){if(f(t)||f(e))throw new Error('methods "add" has at least two parameters, bug got 2('.concat(arguments.length,") params"));if(!c(t))throw new TypeError('first parameters of method "add" must be a string');var o=e;return u(r)&&!v(m(r))&&(o={value:e,expires:m(r)}),this.data.setItem(this.prefix+t,p(o)),n(200,e)}},{key:"search",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!c(t))throw new TypeError('first parameters of method "search" must be a string');t=e?this.prefix+t:t;var n=d(this.data.getItem(t));return u(n)?o(n,r):"not found this localStorage named ".concat(t,", Make sure you set the second parameter to true, which results in prefixed search results")}},{key:"remove",value:function(t){if(this.data.getItem(t)){var e=d(this.data.getItem(t));return this.data.removeItem(t),n(200,e)}return n(404,t,"not found target localStorage named ".concat(t))}},{key:"clearExpired",value:function(t){return function(t,e){var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done);n=!0){var f=i.value,c=e.remove(f);200===c.code&&r.push(c.target)}}catch(t){o=!0,a=t}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(function(t){for(var e=[],r=0,n=Object.keys(t);r<n.length;r++){var o=n[r];a(o,t)&&e.push(o)}return e}(this.data),this)}},{key:"clear",value:function(){this.data.clear()}},{key:"init",value:function(){console.log(this.data)}}])&&g(e.prototype,r),i&&g(e,i),t}();function w(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var S=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.data=window.sessionStorage}var e,r,o;return e=t,(r=[{key:"add",value:function(t,e){return this.data.setItem(t,e),n(200,e)}},{key:"search",value:function(t){return this.data.getItem(t)?String(this.data.getItem(t)):"not found this sessionStorage named ".concat(t)}},{key:"remove",value:function(t){if(this.data.getItem(t)){var e=d(this.data.getItem(t));return this.data.removeItem(t),n(200,e)}return n(404,t,"not found target sessionStorage named ".concat(t))}},{key:"clear",value:function(){this.data.clear()}}])&&w(e.prototype,r),o&&w(e,o),t}();var x=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.local=new b(e),this.session=new S};window.UStorage=x}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,